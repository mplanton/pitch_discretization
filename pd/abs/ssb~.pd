#N canvas 800 397 557 546 12;
#X obj 247 321 cos~;
#X obj 290 303 +~ -0.25;
#X obj 290 326 cos~;
#X text 47 287 pair of allpass;
#X text 47 303 filters to make;
#X text 47 319 90 degree phase;
#X text 40 334 shifted versions;
#X text 357 286 cosine and sine waves;
#X text 40 17 SINGLE SIDEBAND MODULATION;
#X text 247 17 (AKA FREQUENCY SHIFTING);
#X obj 247 275 phasor~;
#X text 356 301 to form the real and;
#X text 356 317 imaginary part of a;
#X text 356 334 complex sinusoid;
#X text 41 52 The technique is to filter the input into two versions
\, 90 degrees out of phase \, which can be interpreted as the real
and imaginary part of a complex signal with positive frequencies only.
You can then form the (complex) product of this with a (complex) sinusoid
to modulate upward or downward in frequency.;
#X obj 165 312 hilbert~;
#X text 45 185 The "hilbert~" object is an abstraction in pd/extra.
;
#X text 311 518 taken from H09.ssb.modulation.pd;
#X text 7 517 Manuel Planton 2021;
#X obj 166 220 inlet~ sig;
#X obj 164 474 outlet~ shifted;
#X obj 247 222 inlet f_shift;
#X text 169 440 Re;
#X obj 165 404 util/complex_mul~;
#X text 46 156 x_shifted = Re( (x + j*Hilb(x)) * e^(j w_shift t) )
;
#X connect 0 0 23 2;
#X connect 1 0 2 0;
#X connect 2 0 23 3;
#X connect 10 0 1 0;
#X connect 10 0 0 0;
#X connect 15 0 23 0;
#X connect 15 1 23 1;
#X connect 19 0 15 0;
#X connect 21 0 10 0;
#X connect 23 0 20 0;
